{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","showAddTaskWindow","showAddButton","Task","task","onDelete","toggleReminder","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","onAdd","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9597e69.chunk.js","sourcesContent":["import React from 'react'; \r\nimport PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick}) =>\r\n(\r\n    <>\r\n    <button style={{ backgroundColor: color }}\r\n            className='btn' \r\n            onClick = { onClick } \r\n            >{ text }</button>\r\n    </>\r\n)\r\n\r\nButton.defaultProps = { \r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = { \r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\n\r\nexport default Button","import React from 'react'; \r\nimport PropTypes from 'prop-types'\r\nimport Button from './Button';\r\n\r\nconst Header = ({title, showAddTaskWindow, showAddButton}) => { \r\n\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n           <Button onClick={showAddTaskWindow} color= {showAddButton ? \"red\":\"green\"} text={showAddButton ? \"Close\":\"Add\"} />\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = { \r\n    title: 'Task Tracker'\r\n}\r\n\r\nHeader.propTypes = { \r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header\r\n\r\n","import React from 'react'\r\nimport { FaTimes } from 'react-icons/fa'\r\n\r\n\r\nconst Task = ({ task, onDelete, toggleReminder }) => { \r\n     return (\r\n         <div className = {`task ${task.reminder ? 'reminder' : \"\"}`} onDoubleClick={() => toggleReminder(task.id)}>\r\n             <h3 >{task.text} \r\n             <FaTimes style={{color: 'red', cursor: 'pointer'}} \r\n             onClick={() => onDelete(task.id)}/>\r\n             </h3>\r\n             <p>{task.day}</p>\r\n         </div>\r\n     )\r\n}\r\n\r\nexport default Task ","import React from 'react'; \r\nimport Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, toggleReminder}) => { \r\n \r\n    return (\r\n        <>\r\n            {tasks.map((task) => (\r\n                <Task key={ task.id } task={ task } onDelete={onDelete} toggleReminder ={toggleReminder}/>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks","import React from 'react'\r\nimport { useState} from 'react'\r\n\r\nconst AddTask = ({onAdd}) => { \r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => { \r\n        e.preventDefault() \r\n\r\n        if(!text) { \r\n            alert(\"Please add a task\")\r\n            return\r\n        }\r\n\r\n        onAdd({text, day, reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return(\r\n        <form className ='add-form' onSubmit={onSubmit}>\r\n            <div className = 'form-control'>\r\n            <label>Task</label>\r\n            <input type='text' placeholder='New Taks' value={text} onChange={(e) => setText(e.target.value)}/>\r\n            </div>\r\n            <div className = 'form-control'>\r\n            <label>Day and Time</label>\r\n            <input type='text' placeholder='Add a day and time' value={day} onChange={(e) => setDay(e.target.value)}/>\r\n            </div>\r\n            <div className = 'form-control form-control-check'>\r\n            <label>Reminder</label>\r\n            <input type='checkbox' checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n\r\n            <input type='submit' value=\"Save task\" className = \"btn btn-block\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask","import React, { useState } from 'react';  \nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask';\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n//Add Task\n\nconst addTask = (task) => { \n  const id = Math.floor(Math.random() * 10000) + 1; \n  const newTask = {id, ...task}\n  setTasks([newTask, ...tasks])\n}\n\n//Delete Task \nconst deleteTask = (id) => { \n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n//Toggle reminder \n\nconst toggleReminder = (id) => { \n  setTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder} : task));\n}\n\n  return (\n    <div className=\"container\">\n      <Header showAddButton = {showAddTask} showAddTaskWindow={() => setShowAddTask(!showAddTask)}/>\n      {showAddTask ? <AddTask onAdd = {addTask}\n      />: \"\"}\n      {tasks.length > 0 ? <Tasks toggleReminder = {toggleReminder} tasks = {tasks} onDelete={deleteTask}/> \n      : <h3>No Tasks available</h3>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}